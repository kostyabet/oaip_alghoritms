Program OAiP_Algo;

{$APPTYPE CONSOLE}
{$R *.res}

Uses
    System.SysUtils,
    Unit1 In 'Unit1.pas',
    Unit2 In 'Unit2.pas';

//Фибоначи через рекурсию
Function Fibo(Num: Integer): Integer;
Begin
    If Num < 0 Then
        Fibo := 0
    Else
        If (Num <= 1) Then
            Fibo := 1
        Else
            Fibo := Fibo(Num - 1) + Fibo(Num - 2);
End;

//Факториал через рекурсию
Function Fact(Num: Integer): Integer;
Begin
    If (Num > 1) Then
        Fact := Num * Fact(Num - 1)
    Else
        Fact := 1;
End;

(* ---------------------https://pastebin.com/94Pi3PXu------------------------ *)
// Задача 1. Найти количество различных символов в строке.
// Задача 2. Самый долгий вызов.
// Задача 3. Найти самую дешевую книгу.
// Задача 4. Сумма элементов массива от 1 до K.
// Задача 5. Дан массив размером M на N. Написать процедуру сравнения 1й строки 
//           со всеми остальными. Вывести количество совпадений
// Задача 6. Занулить между min и max
// Задача 7. Задана матрица М на N, нужно посчитать строки, где все элементы 
//           идут по возрастанию
// Задача 8. Поменять элементы местами, четные индексы с нечетными индексами.
// Задача 9. Дан массив размера N. В нем указаны поля: <Фамилия студента>, 
//           <Номер группы>, <Год поступления>. Найти и вывести группу 
//           с наибольшим количеством студентов. Если групп таких несколько, 
//           то вывести последнюю из них.
// Задача 10. Дан массив из n элементов, n > 5. В каждом компоненте массива 
//            записано имя человека, кол-во лайков и сообщений и друзей.
//            (Вывести 5 человек, у которых наибольшее количество лайков)
// Задача 11. Дан массив точек А , точка В, найти точку с минимальной длиной до 
//            точки В. Точки заданы координатами X и Y.
//            (Массив считывать из текстового файла, все кроме вывода в подпрограмме) 
// Задача 12. Дан массив А размера N, сформировать и вывести новый массив 
//            того же размера где каждый элемент B[k] равен сумме всех элементов 
//            исходного массива с номерами от 1 до k.
// Задача 13. Дан массив размера N. Найти два соседних элемента, сумма которых 
//            максимальна, и вывести эти элементы в порядке возрастания их индексов
// Задача 14. Дана матрица размера M и N и целое число K (1 <= K <= M). 
//            Найти сумму и произведение элементов K-ой строки
// Задача 15. Дано число N, L, K (1 < L <= K <= N) и массив (N элементов), найти 
//            сумму элементов массива, индексы которых не входят в промежуток 
//            от L до K включительно
// Задача 16. Дан массив из N элементов. Заменить каждый элемент массива значение 
//            среднего арифметического его самого и его соседей.
// Задача 17. Дана матрицы M*N, найти строку с максимальной суммой элементов, 
//            вывести эту сумму и номер строки.
// Задача 18. Есть массив записи студентов. Каждая запись имеет фамилию, дату, 
//            изучаемый язык. Найти студента с самым большим кол-вом языков, 
//            если одинаковы, вывести любого студента.
// Задача 19. Есть запись. В ней фамилия, отдел работы, год принятия на работу, 
//            зарплата. Имеется массив таких записей. Найти максимальный 
//            выгодный отдел. Т.е где средняя зарплата самая высокая. 
//            Вывести этот отдел и среднюю зарплату.
//
(* ----------------------------------Из архива-------------------------------- *)
//
// Задача 20. Дана строка s. Вывести количество различных символов в данной строке. 
//            Информацию считывать из файла, для решения использовать процедуру 
//            или функцию, вызываемую в теле программы.
// Задача 21. Дан массив размера N. В нем указаны поля: <Номер абонента>, 
//            <Продолжительность вызова>, <Стоимость минуты>. Найти и вывести 
//            запись с самым дорогим вызовом. Если таких несколько, то вывести первую.
// Задача 22. Дан массив размера N (N – четное число). Поменять местами его первый 
//            элемент со вторым, третий – с четвертым и т. д.
// Задача 23. Дан массив размера N. Найти два соседних элемента, сумма которых 
//            максимальна, и вывести эти элементы в порядке возрастания их индексов.
(* -------------------------------------------------------------------------- *)

Begin
    Readln;
End.
